import calc_class as cs

power = cs.line(0.25,"uni")
data = cs.line(1,"bi")
structural = cs.line(0.1,"bi")
flow = cs.line(1,"uni")
hydra = cs.line(0.3,"bi")

locking_mechanism = cs.system(1)
hatch = cs.system(1)
deceleration_system = cs.system(3)
gn_comp = cs.system(2)
sensors = cs.system(1.5)
launch_abort = cs.system(1.5)
bio_monitoring = cs.system(0.5)
f_comp = cs.system(2)
enc_dec = cs.system(0.5)
amplifiers = cs.system(0.5)
receving_ant = cs.system(0.5)
transmitting = cs.system(0.5)
batteries = cs.system(1.5)
fuel_cells = cs.system(3.5)
pcdu = cs.system(0.5)
heater = cs.system(1)
atmos = cs.system(3)
oxygentanks = cs.system(0)
cargo_compartment = cs.system(1)
heat_shield = cs.system(4)
cooling_system = cs.system(3)
actuator_tanks = cs.system(0)
actuator_feedsystem = cs.system(1.5)
control_actuators = cs.system(2)
tanks = cs.system(1)
hydraulics = cs.system(1.5)
chamber= cs.system(2.5)
feedsystem = cs.system(3.5)
pressurization = cs.system(3.5)
landing_legs = cs.system(1)
vehcile_struc = cs.system(4.5)
capulse_struc = cs.system(4)

l = [locking_mechanism,hatch,deceleration_system,gn_comp,sensors,launch_abort,bio_monitoring,f_comp,enc_dec,amplifiers,receving_ant,transmitting,batteries,fuel_cells,pcdu,heater,atmos,oxygentanks,cargo_compartment,
    heat_shield,cooling_system,actuator_tanks,actuator_feedsystem,control_actuators,tanks,hydraulics,chamber,feedsystem,pressurization,landing_legs,vehcile_struc,capulse_struc]

locking_mechanism.add_c(structural,capulse_struc)
hatch.add_c(structural,capulse_struc)
deceleration_system.add_c(structural,capulse_struc)
launch_abort.add_c(structural,capulse_struc)
launch_abort.add_c(structural,vehcile_struc)
batteries.add_c(structural,capulse_struc)
batteries.add_c(power,pcdu)
fuel_cells.add_c(structural,capulse_struc)
fuel_cells.add_c(power,pcdu)
oxygentanks.add_c(structural,capulse_struc)
oxygentanks.add_c(flow,atmos)
atmos.add_c(data,heater)
sensors.add_c(data,gn_comp)
gn_comp.add_c(data,deceleration_system)
gn_comp.add_c(data,launch_abort)
gn_comp.add_c(data,f_comp)
gn_comp.add_c(data,landing_legs)
gn_comp.add_c(data,feedsystem)
gn_comp.add_c(data,actuator_feedsystem)
pcdu.add_c(power,heater)
pcdu.add_c(power,atmos)
pcdu.add_c(power,amplifiers)
pcdu.add_c(power,gn_comp)
pcdu.add_c(power,f_comp)
bio_monitoring.add_c(data,f_comp)
bio_monitoring.add_c(data,enc_dec)
bio_monitoring.add_c(data,atmos)
f_comp.add_c(data,cooling_system)
f_comp.add_c(data,enc_dec)
enc_dec.add_c(data,amplifiers)
amplifiers.add_c(data,receving_ant)
amplifiers.add_c(data,transmitting)
cargo_compartment.add_c(structural,vehcile_struc)
heat_shield.add_c(structural,vehcile_struc)
cooling_system.add_c(flow,heat_shield)
actuator_tanks.add_c(structural,vehcile_struc)
actuator_tanks.add_c(flow,actuator_feedsystem)
control_actuators.add_c(structural,vehcile_struc)
actuator_feedsystem.add_c(flow,control_actuators)
tanks.add_c(structural,vehcile_struc)
tanks.add_c(flow,pressurization)
hydraulics.add_c(structural,vehcile_struc)
hydraulics.add_c(hydra,control_actuators)
hydraulics.add_c(hydra,feedsystem)
hydraulics.add_c(hydra,chamber)
hydraulics.add_c(hydra,landing_legs)
pressurization.add_c(flow,feedsystem)
feedsystem.add_c(flow,chamber)
chamber.add_c(structural,vehcile_struc)
landing_legs.add_c(structural,vehcile_struc)

result = cs.complexity(l)
print(result.structural)
print(result.average)